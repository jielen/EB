package com.ufgov.gk.common.ebay.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EbCandidateItemRefExample2 {
  /**
   * This field was generated by Abator for iBATIS.
   * This field corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  protected String orderByClause;

  /**
   * This field was generated by Abator for iBATIS.
   * This field corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  protected List oredCriteria;

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  public EbCandidateItemRefExample2() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  protected EbCandidateItemRefExample2(EbCandidateItemRefExample2 example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Abator for iBATIS.
   * This class corresponds to the database table EB_CANDIDATE_ITEM_REF
   *
   * @abatorgenerated Wed Jul 11 23:15:21 CST 2012
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0
        || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    public Criteria andCandidateIdIsNull() {
      addCriterion("CANDIDATE_ID is null");
      return this;
    }

    public Criteria andCandidateIdIsNotNull() {
      addCriterion("CANDIDATE_ID is not null");
      return this;
    }

    public Criteria andCandidateIdEqualTo(String value) {
      addCriterion("CANDIDATE_ID =", value, "candidateId");
      return this;
    }

    public Criteria andCandidateIdNotEqualTo(String value) {
      addCriterion("CANDIDATE_ID <>", value, "candidateId");
      return this;
    }

    public Criteria andCandidateIdGreaterThan(String value) {
      addCriterion("CANDIDATE_ID >", value, "candidateId");
      return this;
    }

    public Criteria andCandidateIdGreaterThanOrEqualTo(String value) {
      addCriterion("CANDIDATE_ID >=", value, "candidateId");
      return this;
    }

    public Criteria andCandidateIdLessThan(String value) {
      addCriterion("CANDIDATE_ID <", value, "candidateId");
      return this;
    }

    public Criteria andCandidateIdLessThanOrEqualTo(String value) {
      addCriterion("CANDIDATE_ID <=", value, "candidateId");
      return this;
    }

    public Criteria andCandidateIdLike(String value) {
      addCriterion("CANDIDATE_ID like", value, "candidateId");
      return this;
    }

    public Criteria andCandidateIdNotLike(String value) {
      addCriterion("CANDIDATE_ID not like", value, "candidateId");
      return this;
    }

    public Criteria andCandidateIdIn(List values) {
      addCriterion("CANDIDATE_ID in", values, "candidateId");
      return this;
    }

    public Criteria andCandidateIdNotIn(List values) {
      addCriterion("CANDIDATE_ID not in", values, "candidateId");
      return this;
    }

    public Criteria andCandidateIdBetween(String value1, String value2) {
      addCriterion("CANDIDATE_ID between", value1, value2, "candidateId");
      return this;
    }

    public Criteria andCandidateIdNotBetween(String value1, String value2) {
      addCriterion("CANDIDATE_ID not between", value1, value2, "candidateId");
      return this;
    }

    //    public Criteria andSellerIdEqualTo(String value) {
    //      addCriterion("SELLER_ID =", value, "ebItem.sellerId");
    //      return this;
    //    }
  }

}
