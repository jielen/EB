package com.ufgov.gk.common.ebay.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.ufgov.gk.common.commonbiz.model.BaseBill;

public class EbRetrievalTaskExample extends BaseBill {
  /**
   * This field was generated by Abator for iBATIS.
   * This field corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  protected String orderByClause;

  /**
   * This field was generated by Abator for iBATIS.
   * This field corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  protected List oredCriteria;

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public EbRetrievalTaskExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  protected EbRetrievalTaskExample(EbRetrievalTaskExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Abator for iBATIS.
   * This class corresponds to the database table EB_RETRIEVAL_TASK
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0
        || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    public Criteria andSellerIdIsNull() {
      addCriterion("SELLER_ID is null");
      return this;
    }

    public Criteria andSellerIdIsNotNull() {
      addCriterion("SELLER_ID is not null");
      return this;
    }

    public Criteria andSellerIdEqualTo(String value) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID =", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdNotEqualTo(String value) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID <>", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdGreaterThan(String value) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID >", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdGreaterThanOrEqualTo(String value) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID >=", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdLessThan(String value) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID <", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdLessThanOrEqualTo(String value) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID <=", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdLike(String value) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID like", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdNotLike(String value) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID not like", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdIn(List values) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID in", values, "sellerId");
      return this;
    }

    public Criteria andSellerIdNotIn(List values) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID not in", values, "sellerId");
      return this;
    }

    public Criteria andSellerIdBetween(String value1, String value2) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID between", value1, value2, "sellerId");
      return this;
    }

    public Criteria andSellerIdNotBetween(String value1, String value2) {
      addCriterion("EB_RETRIEVAL_TASK.SELLER_ID not between", value1, value2, "sellerId");
      return this;
    }

    public Criteria andTaskStartTimeIsNull() {
      addCriterion("EB_RETRIEVAL_TASK.TASK_START_TIME is null");
      return this;
    }

    public Criteria andTaskStartTimeIsNotNull() {
      addCriterion("TASK_START_TIME is not null");
      return this;
    }

    public Criteria andTaskStartTimeEqualTo(Date value) {
      addCriterion("TASK_START_TIME =", value, "taskStartTime");
      return this;
    }

    public Criteria andTaskStartTimeNotEqualTo(Date value) {
      addCriterion("TASK_START_TIME <>", value, "taskStartTime");
      return this;
    }

    public Criteria andTaskStartTimeGreaterThan(Date value) {
      addCriterion("TASK_START_TIME >", value, "taskStartTime");
      return this;
    }

    public Criteria andTaskStartTimeGreaterThanOrEqualTo(Date value) {
      addCriterion("TASK_START_TIME >=", value, "taskStartTime");
      return this;
    }

    public Criteria andTaskStartTimeLessThan(Date value) {
      addCriterion("TASK_START_TIME <", value, "taskStartTime");
      return this;
    }

    public Criteria andTaskStartTimeLessThanOrEqualTo(Date value) {
      addCriterion("TASK_START_TIME <=", value, "taskStartTime");
      return this;
    }

    public Criteria andTaskStartTimeIn(List values) {
      addCriterion("TASK_START_TIME in", values, "taskStartTime");
      return this;
    }

    public Criteria andTaskStartTimeNotIn(List values) {
      addCriterion("TASK_START_TIME not in", values, "taskStartTime");
      return this;
    }

    public Criteria andTaskStartTimeBetween(Date value1, Date value2) {
      addCriterion("TASK_START_TIME between", value1, value2, "taskStartTime");
      return this;
    }

    public Criteria andTaskStartTimeNotBetween(Date value1, Date value2) {
      addCriterion("TASK_START_TIME not between", value1, value2, "taskStartTime");
      return this;
    }

    public Criteria andRetrievalTypeIsNull() {
      addCriterion("RETRIEVAL_TYPE is null");
      return this;
    }

    public Criteria andRetrievalTypeIsNotNull() {
      addCriterion("RETRIEVAL_TYPE is not null");
      return this;
    }

    public Criteria andRetrievalTypeEqualTo(String value) {
      addCriterion("RETRIEVAL_TYPE =", value, "retrievalType");
      return this;
    }

    public Criteria andRetrievalTypeNotEqualTo(String value) {
      addCriterion("RETRIEVAL_TYPE <>", value, "retrievalType");
      return this;
    }

    public Criteria andRetrievalTypeGreaterThan(String value) {
      addCriterion("RETRIEVAL_TYPE >", value, "retrievalType");
      return this;
    }

    public Criteria andRetrievalTypeGreaterThanOrEqualTo(String value) {
      addCriterion("RETRIEVAL_TYPE >=", value, "retrievalType");
      return this;
    }

    public Criteria andRetrievalTypeLessThan(String value) {
      addCriterion("RETRIEVAL_TYPE <", value, "retrievalType");
      return this;
    }

    public Criteria andRetrievalTypeLessThanOrEqualTo(String value) {
      addCriterion("RETRIEVAL_TYPE <=", value, "retrievalType");
      return this;
    }

    public Criteria andRetrievalTypeLike(String value) {
      addCriterion("RETRIEVAL_TYPE like", value, "retrievalType");
      return this;
    }

    public Criteria andRetrievalTypeNotLike(String value) {
      addCriterion("RETRIEVAL_TYPE not like", value, "retrievalType");
      return this;
    }

    public Criteria andRetrievalTypeIn(List values) {
      addCriterion("RETRIEVAL_TYPE in", values, "retrievalType");
      return this;
    }

    public Criteria andRetrievalTypeNotIn(List values) {
      addCriterion("RETRIEVAL_TYPE not in", values, "retrievalType");
      return this;
    }

    public Criteria andRetrievalTypeBetween(String value1, String value2) {
      addCriterion("RETRIEVAL_TYPE between", value1, value2, "retrievalType");
      return this;
    }

    public Criteria andRetrievalTypeNotBetween(String value1, String value2) {
      addCriterion("RETRIEVAL_TYPE not between", value1, value2, "retrievalType");
      return this;
    }

    public Criteria andSellingItemQualityIsNull() {
      addCriterion("SELLING_ITEM_QUALITY is null");
      return this;
    }

    public Criteria andSellingItemQualityIsNotNull() {
      addCriterion("SELLING_ITEM_QUALITY is not null");
      return this;
    }

    public Criteria andSellingItemQualityEqualTo(Long value) {
      addCriterion("SELLING_ITEM_QUALITY =", value, "sellingItemQuality");
      return this;
    }

    public Criteria andSellingItemQualityNotEqualTo(Long value) {
      addCriterion("SELLING_ITEM_QUALITY <>", value, "sellingItemQuality");
      return this;
    }

    public Criteria andSellingItemQualityGreaterThan(Long value) {
      addCriterion("SELLING_ITEM_QUALITY >", value, "sellingItemQuality");
      return this;
    }

    public Criteria andSellingItemQualityGreaterThanOrEqualTo(Long value) {
      addCriterion("SELLING_ITEM_QUALITY >=", value, "sellingItemQuality");
      return this;
    }

    public Criteria andSellingItemQualityLessThan(Long value) {
      addCriterion("SELLING_ITEM_QUALITY <", value, "sellingItemQuality");
      return this;
    }

    public Criteria andSellingItemQualityLessThanOrEqualTo(Long value) {
      addCriterion("SELLING_ITEM_QUALITY <=", value, "sellingItemQuality");
      return this;
    }

    public Criteria andSellingItemQualityIn(List values) {
      addCriterion("SELLING_ITEM_QUALITY in", values, "sellingItemQuality");
      return this;
    }

    public Criteria andSellingItemQualityNotIn(List values) {
      addCriterion("SELLING_ITEM_QUALITY not in", values, "sellingItemQuality");
      return this;
    }

    public Criteria andSellingItemQualityBetween(Long value1, Long value2) {
      addCriterion("SELLING_ITEM_QUALITY between", value1, value2, "sellingItemQuality");
      return this;
    }

    public Criteria andSellingItemQualityNotBetween(Long value1, Long value2) {
      addCriterion("SELLING_ITEM_QUALITY not between", value1, value2, "sellingItemQuality");
      return this;
    }

    public Criteria andStatusIsNull() {
      addCriterion("STATUS is null");
      return this;
    }

    public Criteria andStatusIsNotNull() {
      addCriterion("STATUS is not null");
      return this;
    }

    public Criteria andStatusEqualTo(String value) {
      addCriterion("STATUS =", value, "status");
      return this;
    }

    public Criteria andStatusNotEqualTo(String value) {
      addCriterion("STATUS <>", value, "status");
      return this;
    }

    public Criteria andStatusGreaterThan(String value) {
      addCriterion("STATUS >", value, "status");
      return this;
    }

    public Criteria andStatusGreaterThanOrEqualTo(String value) {
      addCriterion("STATUS >=", value, "status");
      return this;
    }

    public Criteria andStatusLessThan(String value) {
      addCriterion("STATUS <", value, "status");
      return this;
    }

    public Criteria andStatusLessThanOrEqualTo(String value) {
      addCriterion("STATUS <=", value, "status");
      return this;
    }

    public Criteria andStatusLike(String value) {
      addCriterion("STATUS like", value, "status");
      return this;
    }

    public Criteria andStatusNotLike(String value) {
      addCriterion("STATUS not like", value, "status");
      return this;
    }

    public Criteria andStatusIn(List values) {
      addCriterion("STATUS in", values, "status");
      return this;
    }

    public Criteria andStatusNotIn(List values) {
      addCriterion("STATUS not in", values, "status");
      return this;
    }

    public Criteria andStatusBetween(String value1, String value2) {
      addCriterion("STATUS between", value1, value2, "status");
      return this;
    }

    public Criteria andStatusNotBetween(String value1, String value2) {
      addCriterion("STATUS not between", value1, value2, "status");
      return this;
    }

    public Criteria andTotalItemQualityIsNull() {
      addCriterion("TOTAL_ITEM_QUALITY is null");
      return this;
    }

    public Criteria andTotalItemQualityIsNotNull() {
      addCriterion("TOTAL_ITEM_QUALITY is not null");
      return this;
    }

    public Criteria andTotalItemQualityEqualTo(Long value) {
      addCriterion("TOTAL_ITEM_QUALITY =", value, "totalItemQuality");
      return this;
    }

    public Criteria andTotalItemQualityNotEqualTo(Long value) {
      addCriterion("TOTAL_ITEM_QUALITY <>", value, "totalItemQuality");
      return this;
    }

    public Criteria andTotalItemQualityGreaterThan(Long value) {
      addCriterion("TOTAL_ITEM_QUALITY >", value, "totalItemQuality");
      return this;
    }

    public Criteria andTotalItemQualityGreaterThanOrEqualTo(Long value) {
      addCriterion("TOTAL_ITEM_QUALITY >=", value, "totalItemQuality");
      return this;
    }

    public Criteria andTotalItemQualityLessThan(Long value) {
      addCriterion("TOTAL_ITEM_QUALITY <", value, "totalItemQuality");
      return this;
    }

    public Criteria andTotalItemQualityLessThanOrEqualTo(Long value) {
      addCriterion("TOTAL_ITEM_QUALITY <=", value, "totalItemQuality");
      return this;
    }

    public Criteria andTotalItemQualityIn(List values) {
      addCriterion("TOTAL_ITEM_QUALITY in", values, "totalItemQuality");
      return this;
    }

    public Criteria andTotalItemQualityNotIn(List values) {
      addCriterion("TOTAL_ITEM_QUALITY not in", values, "totalItemQuality");
      return this;
    }

    public Criteria andTotalItemQualityBetween(Long value1, Long value2) {
      addCriterion("TOTAL_ITEM_QUALITY between", value1, value2, "totalItemQuality");
      return this;
    }

    public Criteria andTotalItemQualityNotBetween(Long value1, Long value2) {
      addCriterion("TOTAL_ITEM_QUALITY not between", value1, value2, "totalItemQuality");
      return this;
    }

    public Criteria andRetrievalAnchorTimeIsNull() {
      addCriterion("RETRIEVAL_ANCHOR_TIME is null");
      return this;
    }

    public Criteria andRetrievalAnchorTimeIsNotNull() {
      addCriterion("RETRIEVAL_ANCHOR_TIME is not null");
      return this;
    }

    public Criteria andRetrievalAnchorTimeEqualTo(Date value) {
      addCriterion("RETRIEVAL_ANCHOR_TIME =", value, "retrievalAnchorTime");
      return this;
    }

    public Criteria andRetrievalAnchorTimeNotEqualTo(Date value) {
      addCriterion("RETRIEVAL_ANCHOR_TIME <>", value, "retrievalAnchorTime");
      return this;
    }

    public Criteria andRetrievalAnchorTimeGreaterThan(Date value) {
      addCriterion("RETRIEVAL_ANCHOR_TIME >", value, "retrievalAnchorTime");
      return this;
    }

    public Criteria andRetrievalAnchorTimeGreaterThanOrEqualTo(Date value) {
      addCriterion("RETRIEVAL_ANCHOR_TIME >=", value, "retrievalAnchorTime");
      return this;
    }

    public Criteria andRetrievalAnchorTimeLessThan(Date value) {
      addCriterion("RETRIEVAL_ANCHOR_TIME <", value, "retrievalAnchorTime");
      return this;
    }

    public Criteria andRetrievalAnchorTimeLessThanOrEqualTo(Date value) {
      addCriterion("RETRIEVAL_ANCHOR_TIME <=", value, "retrievalAnchorTime");
      return this;
    }

    public Criteria andRetrievalAnchorTimeIn(List values) {
      addCriterion("RETRIEVAL_ANCHOR_TIME in", values, "retrievalAnchorTime");
      return this;
    }

    public Criteria andRetrievalAnchorTimeNotIn(List values) {
      addCriterion("RETRIEVAL_ANCHOR_TIME not in", values, "retrievalAnchorTime");
      return this;
    }

    public Criteria andRetrievalAnchorTimeBetween(Date value1, Date value2) {
      addCriterion("RETRIEVAL_ANCHOR_TIME between", value1, value2, "retrievalAnchorTime");
      return this;
    }

    public Criteria andRetrievalAnchorTimeNotBetween(Date value1, Date value2) {
      addCriterion("RETRIEVAL_ANCHOR_TIME not between", value1, value2, "retrievalAnchorTime");
      return this;
    }

    public Criteria andStepIsNull() {
      addCriterion("STEP is null");
      return this;
    }

    public Criteria andStepIsNotNull() {
      addCriterion("STEP is not null");
      return this;
    }

    public Criteria andStepEqualTo(Long value) {
      addCriterion("STEP =", value, "step");
      return this;
    }

    public Criteria andStepNotEqualTo(Long value) {
      addCriterion("STEP <>", value, "step");
      return this;
    }

    public Criteria andStepGreaterThan(Long value) {
      addCriterion("STEP >", value, "step");
      return this;
    }

    public Criteria andStepGreaterThanOrEqualTo(Long value) {
      addCriterion("STEP >=", value, "step");
      return this;
    }

    public Criteria andStepLessThan(Long value) {
      addCriterion("STEP <", value, "step");
      return this;
    }

    public Criteria andStepLessThanOrEqualTo(Long value) {
      addCriterion("STEP <=", value, "step");
      return this;
    }

    public Criteria andStepIn(List values) {
      addCriterion("STEP in", values, "step");
      return this;
    }

    public Criteria andStepNotIn(List values) {
      addCriterion("STEP not in", values, "step");
      return this;
    }

    public Criteria andStepBetween(Long value1, Long value2) {
      addCriterion("STEP between", value1, value2, "step");
      return this;
    }

    public Criteria andStepNotBetween(Long value1, Long value2) {
      addCriterion("STEP not between", value1, value2, "step");
      return this;
    }

    public Criteria andTimeConsumingIsNull() {
      addCriterion("TIME_CONSUMING is null");
      return this;
    }

    public Criteria andTimeConsumingIsNotNull() {
      addCriterion("TIME_CONSUMING is not null");
      return this;
    }

    public Criteria andTimeConsumingEqualTo(String value) {
      addCriterion("TIME_CONSUMING =", value, "timeConsuming");
      return this;
    }

    public Criteria andTimeConsumingNotEqualTo(String value) {
      addCriterion("TIME_CONSUMING <>", value, "timeConsuming");
      return this;
    }

    public Criteria andTimeConsumingGreaterThan(String value) {
      addCriterion("TIME_CONSUMING >", value, "timeConsuming");
      return this;
    }

    public Criteria andTimeConsumingGreaterThanOrEqualTo(String value) {
      addCriterion("TIME_CONSUMING >=", value, "timeConsuming");
      return this;
    }

    public Criteria andTimeConsumingLessThan(String value) {
      addCriterion("TIME_CONSUMING <", value, "timeConsuming");
      return this;
    }

    public Criteria andTimeConsumingLessThanOrEqualTo(String value) {
      addCriterion("TIME_CONSUMING <=", value, "timeConsuming");
      return this;
    }

    public Criteria andTimeConsumingLike(String value) {
      addCriterion("TIME_CONSUMING like", value, "timeConsuming");
      return this;
    }

    public Criteria andTimeConsumingNotLike(String value) {
      addCriterion("TIME_CONSUMING not like", value, "timeConsuming");
      return this;
    }

    public Criteria andTimeConsumingIn(List values) {
      addCriterion("TIME_CONSUMING in", values, "timeConsuming");
      return this;
    }

    public Criteria andTimeConsumingNotIn(List values) {
      addCriterion("TIME_CONSUMING not in", values, "timeConsuming");
      return this;
    }

    public Criteria andTimeConsumingBetween(String value1, String value2) {
      addCriterion("TIME_CONSUMING between", value1, value2, "timeConsuming");
      return this;
    }

    public Criteria andTimeConsumingNotBetween(String value1, String value2) {
      addCriterion("TIME_CONSUMING not between", value1, value2, "timeConsuming");
      return this;
    }

    public Criteria andRetrievalMonthsIsNull() {
      addCriterion("RETRIEVAL_MONTHS is null");
      return this;
    }

    public Criteria andRetrievalMonthsIsNotNull() {
      addCriterion("RETRIEVAL_MONTHS is not null");
      return this;
    }

    public Criteria andRetrievalMonthsEqualTo(Long value) {
      addCriterion("RETRIEVAL_MONTHS =", value, "retrievalMonths");
      return this;
    }

    public Criteria andRetrievalMonthsNotEqualTo(Long value) {
      addCriterion("RETRIEVAL_MONTHS <>", value, "retrievalMonths");
      return this;
    }

    public Criteria andRetrievalMonthsGreaterThan(Long value) {
      addCriterion("RETRIEVAL_MONTHS >", value, "retrievalMonths");
      return this;
    }

    public Criteria andRetrievalMonthsGreaterThanOrEqualTo(Long value) {
      addCriterion("RETRIEVAL_MONTHS >=", value, "retrievalMonths");
      return this;
    }

    public Criteria andRetrievalMonthsLessThan(Long value) {
      addCriterion("RETRIEVAL_MONTHS <", value, "retrievalMonths");
      return this;
    }

    public Criteria andRetrievalMonthsLessThanOrEqualTo(Long value) {
      addCriterion("RETRIEVAL_MONTHS <=", value, "retrievalMonths");
      return this;
    }

    public Criteria andRetrievalMonthsIn(List values) {
      addCriterion("RETRIEVAL_MONTHS in", values, "retrievalMonths");
      return this;
    }

    public Criteria andRetrievalMonthsNotIn(List values) {
      addCriterion("RETRIEVAL_MONTHS not in", values, "retrievalMonths");
      return this;
    }

    public Criteria andRetrievalMonthsBetween(Long value1, Long value2) {
      addCriterion("RETRIEVAL_MONTHS between", value1, value2, "retrievalMonths");
      return this;
    }

    public Criteria andRetrievalMonthsNotBetween(Long value1, Long value2) {
      addCriterion("RETRIEVAL_MONTHS not between", value1, value2, "retrievalMonths");
      return this;
    }

    public Criteria andTotalSoldAmountIsNull() {
      addCriterion("TOTAL_SOLD_AMOUNT is null");
      return this;
    }

    public Criteria andTotalSoldAmountIsNotNull() {
      addCriterion("TOTAL_SOLD_AMOUNT is not null");
      return this;
    }

    public Criteria andTotalSoldAmountEqualTo(BigDecimal value) {
      addCriterion("TOTAL_SOLD_AMOUNT =", value, "totalSoldAmount");
      return this;
    }

    public Criteria andTotalSoldAmountNotEqualTo(BigDecimal value) {
      addCriterion("TOTAL_SOLD_AMOUNT <>", value, "totalSoldAmount");
      return this;
    }

    public Criteria andTotalSoldAmountGreaterThan(BigDecimal value) {
      addCriterion("TOTAL_SOLD_AMOUNT >", value, "totalSoldAmount");
      return this;
    }

    public Criteria andTotalSoldAmountGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("TOTAL_SOLD_AMOUNT >=", value, "totalSoldAmount");
      return this;
    }

    public Criteria andTotalSoldAmountLessThan(BigDecimal value) {
      addCriterion("TOTAL_SOLD_AMOUNT <", value, "totalSoldAmount");
      return this;
    }

    public Criteria andTotalSoldAmountLessThanOrEqualTo(BigDecimal value) {
      addCriterion("TOTAL_SOLD_AMOUNT <=", value, "totalSoldAmount");
      return this;
    }

    public Criteria andTotalSoldAmountIn(List values) {
      addCriterion("TOTAL_SOLD_AMOUNT in", values, "totalSoldAmount");
      return this;
    }

    public Criteria andTotalSoldAmountNotIn(List values) {
      addCriterion("TOTAL_SOLD_AMOUNT not in", values, "totalSoldAmount");
      return this;
    }

    public Criteria andTotalSoldAmountBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("TOTAL_SOLD_AMOUNT between", value1, value2, "totalSoldAmount");
      return this;
    }

    public Criteria andTotalSoldAmountNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("TOTAL_SOLD_AMOUNT not between", value1, value2, "totalSoldAmount");
      return this;
    }

    public Criteria andTotalSoldQualityIsNull() {
      addCriterion("TOTAL_SOLD_QUALITY is null");
      return this;
    }

    public Criteria andTotalSoldQualityIsNotNull() {
      addCriterion("TOTAL_SOLD_QUALITY is not null");
      return this;
    }

    public Criteria andTotalSoldQualityEqualTo(Long value) {
      addCriterion("TOTAL_SOLD_QUALITY =", value, "totalSoldQuality");
      return this;
    }

    public Criteria andTotalSoldQualityNotEqualTo(Long value) {
      addCriterion("TOTAL_SOLD_QUALITY <>", value, "totalSoldQuality");
      return this;
    }

    public Criteria andTotalSoldQualityGreaterThan(Long value) {
      addCriterion("TOTAL_SOLD_QUALITY >", value, "totalSoldQuality");
      return this;
    }

    public Criteria andTotalSoldQualityGreaterThanOrEqualTo(Long value) {
      addCriterion("TOTAL_SOLD_QUALITY >=", value, "totalSoldQuality");
      return this;
    }

    public Criteria andTotalSoldQualityLessThan(Long value) {
      addCriterion("TOTAL_SOLD_QUALITY <", value, "totalSoldQuality");
      return this;
    }

    public Criteria andTotalSoldQualityLessThanOrEqualTo(Long value) {
      addCriterion("TOTAL_SOLD_QUALITY <=", value, "totalSoldQuality");
      return this;
    }

    public Criteria andTotalSoldQualityIn(List values) {
      addCriterion("TOTAL_SOLD_QUALITY in", values, "totalSoldQuality");
      return this;
    }

    public Criteria andTotalSoldQualityNotIn(List values) {
      addCriterion("TOTAL_SOLD_QUALITY not in", values, "totalSoldQuality");
      return this;
    }

    public Criteria andTotalSoldQualityBetween(Long value1, Long value2) {
      addCriterion("TOTAL_SOLD_QUALITY between", value1, value2, "totalSoldQuality");
      return this;
    }

    public Criteria andTotalSoldQualityNotBetween(Long value1, Long value2) {
      addCriterion("TOTAL_SOLD_QUALITY not between", value1, value2, "totalSoldQuality");
      return this;
    }

    public Criteria andCreateTimeIsNull() {
      addCriterion("CREATE_TIME is null");
      return this;
    }

    public Criteria andCreateTimeIsNotNull() {
      addCriterion("CREATE_TIME is not null");
      return this;
    }

    public Criteria andCreateTimeEqualTo(Date value) {
      addCriterion("CREATE_TIME =", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeNotEqualTo(Date value) {
      addCriterion("CREATE_TIME <>", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeGreaterThan(Date value) {
      addCriterion("CREATE_TIME >", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
      addCriterion("CREATE_TIME >=", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeLessThan(Date value) {
      addCriterion("CREATE_TIME <", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
      addCriterion("CREATE_TIME <=", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeIn(List values) {
      addCriterion("CREATE_TIME in", values, "createTime");
      return this;
    }

    public Criteria andCreateTimeNotIn(List values) {
      addCriterion("CREATE_TIME not in", values, "createTime");
      return this;
    }

    public Criteria andCreateTimeBetween(Date value1, Date value2) {
      addCriterion("CREATE_TIME between", value1, value2, "createTime");
      return this;
    }

    public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
      addCriterion("CREATE_TIME not between", value1, value2, "createTime");
      return this;
    }
  }
}