package com.ufgov.gk.common.ebay.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EbSellerExample {
  /**
   * This field was generated by Abator for iBATIS.
   * This field corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  protected String orderByClause;

  /**
   * This field was generated by Abator for iBATIS.
   * This field corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  protected List oredCriteria;

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public EbSellerExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  protected EbSellerExample(EbSellerExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Abator for iBATIS.
   * This class corresponds to the database table EB_SELLER
   *
   * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0
        || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    public Criteria andattentionStatusEqualTo(String value) {
      addCriterion("ATTENTION_STATUS =", value, "attentionStatus");
      return this;
    }

    public Criteria andSellerIdIsNull() {
      addCriterion("SELLER_ID is null");
      return this;
    }

    public Criteria andSellerIdIsNotNull() {
      addCriterion("SELLER_ID is not null");
      return this;
    }

    public Criteria andSellerIdEqualTo(String value) {
      addCriterion("SELLER_ID =", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdNotEqualTo(String value) {
      addCriterion("SELLER_ID <>", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdGreaterThan(String value) {
      addCriterion("SELLER_ID >", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdGreaterThanOrEqualTo(String value) {
      addCriterion("SELLER_ID >=", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdLessThan(String value) {
      addCriterion("SELLER_ID <", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdLessThanOrEqualTo(String value) {
      addCriterion("SELLER_ID <=", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdLike(String value) {
      addCriterion("SELLER_ID like", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdNotLike(String value) {
      addCriterion("SELLER_ID not like", value, "sellerId");
      return this;
    }

    public Criteria andSellerIdIn(List values) {
      addCriterion("SELLER_ID in", values, "sellerId");
      return this;
    }

    public Criteria andSellerIdNotIn(List values) {
      addCriterion("SELLER_ID not in", values, "sellerId");
      return this;
    }

    public Criteria andSellerIdBetween(String value1, String value2) {
      addCriterion("SELLER_ID between", value1, value2, "sellerId");
      return this;
    }

    public Criteria andSellerIdNotBetween(String value1, String value2) {
      addCriterion("SELLER_ID not between", value1, value2, "sellerId");
      return this;
    }

    public Criteria andContryIsNull() {
      addCriterion("CONTRY is null");
      return this;
    }

    public Criteria andContryIsNotNull() {
      addCriterion("CONTRY is not null");
      return this;
    }

    public Criteria andContryEqualTo(String value) {
      addCriterion("CONTRY =", value, "contry");
      return this;
    }

    public Criteria andContryNotEqualTo(String value) {
      addCriterion("CONTRY <>", value, "contry");
      return this;
    }

    public Criteria andContryGreaterThan(String value) {
      addCriterion("CONTRY >", value, "contry");
      return this;
    }

    public Criteria andContryGreaterThanOrEqualTo(String value) {
      addCriterion("CONTRY >=", value, "contry");
      return this;
    }

    public Criteria andContryLessThan(String value) {
      addCriterion("CONTRY <", value, "contry");
      return this;
    }

    public Criteria andContryLessThanOrEqualTo(String value) {
      addCriterion("CONTRY <=", value, "contry");
      return this;
    }

    public Criteria andContryLike(String value) {
      addCriterion("CONTRY like", value, "contry");
      return this;
    }

    public Criteria andContryNotLike(String value) {
      addCriterion("CONTRY not like", value, "contry");
      return this;
    }

    public Criteria andContryIn(List values) {
      addCriterion("CONTRY in", values, "contry");
      return this;
    }

    public Criteria andContryNotIn(List values) {
      addCriterion("CONTRY not in", values, "contry");
      return this;
    }

    public Criteria andContryBetween(String value1, String value2) {
      addCriterion("CONTRY between", value1, value2, "contry");
      return this;
    }

    public Criteria andContryNotBetween(String value1, String value2) {
      addCriterion("CONTRY not between", value1, value2, "contry");
      return this;
    }

    public Criteria andRegisterDateIsNull() {
      addCriterion("REGISTER_DATE is null");
      return this;
    }

    public Criteria andRegisterDateIsNotNull() {
      addCriterion("REGISTER_DATE is not null");
      return this;
    }

    public Criteria andRegisterDateEqualTo(Date value) {
      addCriterion("REGISTER_DATE =", value, "registerDate");
      return this;
    }

    public Criteria andRegisterDateNotEqualTo(Date value) {
      addCriterion("REGISTER_DATE <>", value, "registerDate");
      return this;
    }

    public Criteria andRegisterDateGreaterThan(Date value) {
      addCriterion("REGISTER_DATE >", value, "registerDate");
      return this;
    }

    public Criteria andRegisterDateGreaterThanOrEqualTo(Date value) {
      addCriterion("REGISTER_DATE >=", value, "registerDate");
      return this;
    }

    public Criteria andRegisterDateLessThan(Date value) {
      addCriterion("REGISTER_DATE <", value, "registerDate");
      return this;
    }

    public Criteria andRegisterDateLessThanOrEqualTo(Date value) {
      addCriterion("REGISTER_DATE <=", value, "registerDate");
      return this;
    }

    public Criteria andRegisterDateIn(List values) {
      addCriterion("REGISTER_DATE in", values, "registerDate");
      return this;
    }

    public Criteria andRegisterDateNotIn(List values) {
      addCriterion("REGISTER_DATE not in", values, "registerDate");
      return this;
    }

    public Criteria andRegisterDateBetween(Date value1, Date value2) {
      addCriterion("REGISTER_DATE between", value1, value2, "registerDate");
      return this;
    }

    public Criteria andRegisterDateNotBetween(Date value1, Date value2) {
      addCriterion("REGISTER_DATE not between", value1, value2, "registerDate");
      return this;
    }

    public Criteria andFeedbackIsNull() {
      addCriterion("FEEDBACK is null");
      return this;
    }

    public Criteria andFeedbackIsNotNull() {
      addCriterion("FEEDBACK is not null");
      return this;
    }

    public Criteria andFeedbackEqualTo(Long value) {
      addCriterion("FEEDBACK =", value, "feedback");
      return this;
    }

    public Criteria andFeedbackNotEqualTo(Long value) {
      addCriterion("FEEDBACK <>", value, "feedback");
      return this;
    }

    public Criteria andFeedbackGreaterThan(Long value) {
      addCriterion("FEEDBACK >", value, "feedback");
      return this;
    }

    public Criteria andFeedbackGreaterThanOrEqualTo(Long value) {
      addCriterion("FEEDBACK >=", value, "feedback");
      return this;
    }

    public Criteria andFeedbackLessThan(Long value) {
      addCriterion("FEEDBACK <", value, "feedback");
      return this;
    }

    public Criteria andFeedbackLessThanOrEqualTo(Long value) {
      addCriterion("FEEDBACK <=", value, "feedback");
      return this;
    }

    public Criteria andFeedbackIn(List values) {
      addCriterion("FEEDBACK in", values, "feedback");
      return this;
    }

    public Criteria andFeedbackNotIn(List values) {
      addCriterion("FEEDBACK not in", values, "feedback");
      return this;
    }

    public Criteria andFeedbackBetween(Long value1, Long value2) {
      addCriterion("FEEDBACK between", value1, value2, "feedback");
      return this;
    }

    public Criteria andFeedbackNotBetween(Long value1, Long value2) {
      addCriterion("FEEDBACK not between", value1, value2, "feedback");
      return this;
    }

    public Criteria andGroupIdIsNull() {
      addCriterion("GROUP_ID is null");
      return this;
    }

    public Criteria andGroupIdIsNotNull() {
      addCriterion("GROUP_ID is not null");
      return this;
    }

    public Criteria andGroupIdEqualTo(String value) {
      addCriterion("GROUP_ID =", value, "groupId");
      return this;
    }

    public Criteria andGroupIdNotEqualTo(String value) {
      addCriterion("GROUP_ID <>", value, "groupId");
      return this;
    }

    public Criteria andGroupIdGreaterThan(String value) {
      addCriterion("GROUP_ID >", value, "groupId");
      return this;
    }

    public Criteria andGroupIdGreaterThanOrEqualTo(String value) {
      addCriterion("GROUP_ID >=", value, "groupId");
      return this;
    }

    public Criteria andGroupIdLessThan(String value) {
      addCriterion("GROUP_ID <", value, "groupId");
      return this;
    }

    public Criteria andGroupIdLessThanOrEqualTo(String value) {
      addCriterion("GROUP_ID <=", value, "groupId");
      return this;
    }

    public Criteria andGroupIdLike(String value) {
      addCriterion("GROUP_ID like", value, "groupId");
      return this;
    }

    public Criteria andGroupIdNotLike(String value) {
      addCriterion("GROUP_ID not like", value, "groupId");
      return this;
    }

    public Criteria andGroupIdIn(List values) {
      addCriterion("GROUP_ID in", values, "groupId");
      return this;
    }

    public Criteria andGroupIdNotIn(List values) {
      addCriterion("GROUP_ID not in", values, "groupId");
      return this;
    }

    public Criteria andGroupIdBetween(String value1, String value2) {
      addCriterion("GROUP_ID between", value1, value2, "groupId");
      return this;
    }

    public Criteria andGroupIdNotBetween(String value1, String value2) {
      addCriterion("GROUP_ID not between", value1, value2, "groupId");
      return this;
    }

    public Criteria andCityIsNull() {
      addCriterion("CITY is null");
      return this;
    }

    public Criteria andCityIsNotNull() {
      addCriterion("CITY is not null");
      return this;
    }

    public Criteria andCityEqualTo(String value) {
      addCriterion("CITY =", value, "city");
      return this;
    }

    public Criteria andCityNotEqualTo(String value) {
      addCriterion("CITY <>", value, "city");
      return this;
    }

    public Criteria andCityGreaterThan(String value) {
      addCriterion("CITY >", value, "city");
      return this;
    }

    public Criteria andCityGreaterThanOrEqualTo(String value) {
      addCriterion("CITY >=", value, "city");
      return this;
    }

    public Criteria andCityLessThan(String value) {
      addCriterion("CITY <", value, "city");
      return this;
    }

    public Criteria andCityLessThanOrEqualTo(String value) {
      addCriterion("CITY <=", value, "city");
      return this;
    }

    public Criteria andCityLike(String value) {
      addCriterion("CITY like", value, "city");
      return this;
    }

    public Criteria andCityNotLike(String value) {
      addCriterion("CITY not like", value, "city");
      return this;
    }

    public Criteria andCityIn(List values) {
      addCriterion("CITY in", values, "city");
      return this;
    }

    public Criteria andCityNotIn(List values) {
      addCriterion("CITY not in", values, "city");
      return this;
    }

    public Criteria andCityBetween(String value1, String value2) {
      addCriterion("CITY between", value1, value2, "city");
      return this;
    }

    public Criteria andCityNotBetween(String value1, String value2) {
      addCriterion("CITY not between", value1, value2, "city");
      return this;
    }

    public Criteria andRemarkIsNull() {
      addCriterion("REMARK is null");
      return this;
    }

    public Criteria andRemarkIsNotNull() {
      addCriterion("REMARK is not null");
      return this;
    }

    public Criteria andRemarkEqualTo(String value) {
      addCriterion("REMARK =", value, "remark");
      return this;
    }

    public Criteria andRemarkNotEqualTo(String value) {
      addCriterion("REMARK <>", value, "remark");
      return this;
    }

    public Criteria andRemarkGreaterThan(String value) {
      addCriterion("REMARK >", value, "remark");
      return this;
    }

    public Criteria andRemarkGreaterThanOrEqualTo(String value) {
      addCriterion("REMARK >=", value, "remark");
      return this;
    }

    public Criteria andRemarkLessThan(String value) {
      addCriterion("REMARK <", value, "remark");
      return this;
    }

    public Criteria andRemarkLessThanOrEqualTo(String value) {
      addCriterion("REMARK <=", value, "remark");
      return this;
    }

    public Criteria andRemarkLike(String value) {
      addCriterion("REMARK like", value, "remark");
      return this;
    }

    public Criteria andRemarkNotLike(String value) {
      addCriterion("REMARK not like", value, "remark");
      return this;
    }

    public Criteria andRemarkIn(List values) {
      addCriterion("REMARK in", values, "remark");
      return this;
    }

    public Criteria andRemarkNotIn(List values) {
      addCriterion("REMARK not in", values, "remark");
      return this;
    }

    public Criteria andRemarkBetween(String value1, String value2) {
      addCriterion("REMARK between", value1, value2, "remark");
      return this;
    }

    public Criteria andRemarkNotBetween(String value1, String value2) {
      addCriterion("REMARK not between", value1, value2, "remark");
      return this;
    }

    public Criteria andImageSiteIsNull() {
      addCriterion("IMAGE_SITE is null");
      return this;
    }

    public Criteria andImageSiteIsNotNull() {
      addCriterion("IMAGE_SITE is not null");
      return this;
    }

    public Criteria andImageSiteEqualTo(Object value) {
      addCriterion("IMAGE_SITE =", value, "imageSite");
      return this;
    }

    public Criteria andImageSiteNotEqualTo(Object value) {
      addCriterion("IMAGE_SITE <>", value, "imageSite");
      return this;
    }

    public Criteria andImageSiteGreaterThan(Object value) {
      addCriterion("IMAGE_SITE >", value, "imageSite");
      return this;
    }

    public Criteria andImageSiteGreaterThanOrEqualTo(Object value) {
      addCriterion("IMAGE_SITE >=", value, "imageSite");
      return this;
    }

    public Criteria andImageSiteLessThan(Object value) {
      addCriterion("IMAGE_SITE <", value, "imageSite");
      return this;
    }

    public Criteria andImageSiteLessThanOrEqualTo(Object value) {
      addCriterion("IMAGE_SITE <=", value, "imageSite");
      return this;
    }

    public Criteria andImageSiteIn(List values) {
      addCriterion("IMAGE_SITE in", values, "imageSite");
      return this;
    }

    public Criteria andImageSiteNotIn(List values) {
      addCriterion("IMAGE_SITE not in", values, "imageSite");
      return this;
    }

    public Criteria andImageSiteBetween(Object value1, Object value2) {
      addCriterion("IMAGE_SITE between", value1, value2, "imageSite");
      return this;
    }

    public Criteria andImageSiteNotBetween(Object value1, Object value2) {
      addCriterion("IMAGE_SITE not between", value1, value2, "imageSite");
      return this;
    }
  }
}