package com.ufgov.gk.common.system.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AsMenuCompoExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public AsMenuCompoExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    protected AsMenuCompoExample(AsMenuCompoExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table AS_MENU_COMPO
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCompoIdIsNull() {
            addCriterion("COMPO_ID is null");
            return this;
        }

        public Criteria andCompoIdIsNotNull() {
            addCriterion("COMPO_ID is not null");
            return this;
        }

        public Criteria andCompoIdEqualTo(String value) {
            addCriterion("COMPO_ID =", value, "compoId");
            return this;
        }

        public Criteria andCompoIdNotEqualTo(String value) {
            addCriterion("COMPO_ID <>", value, "compoId");
            return this;
        }

        public Criteria andCompoIdGreaterThan(String value) {
            addCriterion("COMPO_ID >", value, "compoId");
            return this;
        }

        public Criteria andCompoIdGreaterThanOrEqualTo(String value) {
            addCriterion("COMPO_ID >=", value, "compoId");
            return this;
        }

        public Criteria andCompoIdLessThan(String value) {
            addCriterion("COMPO_ID <", value, "compoId");
            return this;
        }

        public Criteria andCompoIdLessThanOrEqualTo(String value) {
            addCriterion("COMPO_ID <=", value, "compoId");
            return this;
        }

        public Criteria andCompoIdLike(String value) {
            addCriterion("COMPO_ID like", value, "compoId");
            return this;
        }

        public Criteria andCompoIdNotLike(String value) {
            addCriterion("COMPO_ID not like", value, "compoId");
            return this;
        }

        public Criteria andCompoIdIn(List values) {
            addCriterion("COMPO_ID in", values, "compoId");
            return this;
        }

        public Criteria andCompoIdNotIn(List values) {
            addCriterion("COMPO_ID not in", values, "compoId");
            return this;
        }

        public Criteria andCompoIdBetween(String value1, String value2) {
            addCriterion("COMPO_ID between", value1, value2, "compoId");
            return this;
        }

        public Criteria andCompoIdNotBetween(String value1, String value2) {
            addCriterion("COMPO_ID not between", value1, value2, "compoId");
            return this;
        }

        public Criteria andMenuIdIsNull() {
            addCriterion("MENU_ID is null");
            return this;
        }

        public Criteria andMenuIdIsNotNull() {
            addCriterion("MENU_ID is not null");
            return this;
        }

        public Criteria andMenuIdEqualTo(String value) {
            addCriterion("MENU_ID =", value, "menuId");
            return this;
        }

        public Criteria andMenuIdNotEqualTo(String value) {
            addCriterion("MENU_ID <>", value, "menuId");
            return this;
        }

        public Criteria andMenuIdGreaterThan(String value) {
            addCriterion("MENU_ID >", value, "menuId");
            return this;
        }

        public Criteria andMenuIdGreaterThanOrEqualTo(String value) {
            addCriterion("MENU_ID >=", value, "menuId");
            return this;
        }

        public Criteria andMenuIdLessThan(String value) {
            addCriterion("MENU_ID <", value, "menuId");
            return this;
        }

        public Criteria andMenuIdLessThanOrEqualTo(String value) {
            addCriterion("MENU_ID <=", value, "menuId");
            return this;
        }

        public Criteria andMenuIdLike(String value) {
            addCriterion("MENU_ID like", value, "menuId");
            return this;
        }

        public Criteria andMenuIdNotLike(String value) {
            addCriterion("MENU_ID not like", value, "menuId");
            return this;
        }

        public Criteria andMenuIdIn(List values) {
            addCriterion("MENU_ID in", values, "menuId");
            return this;
        }

        public Criteria andMenuIdNotIn(List values) {
            addCriterion("MENU_ID not in", values, "menuId");
            return this;
        }

        public Criteria andMenuIdBetween(String value1, String value2) {
            addCriterion("MENU_ID between", value1, value2, "menuId");
            return this;
        }

        public Criteria andMenuIdNotBetween(String value1, String value2) {
            addCriterion("MENU_ID not between", value1, value2, "menuId");
            return this;
        }

        public Criteria andOrdIndexIsNull() {
            addCriterion("ORD_INDEX is null");
            return this;
        }

        public Criteria andOrdIndexIsNotNull() {
            addCriterion("ORD_INDEX is not null");
            return this;
        }

        public Criteria andOrdIndexEqualTo(BigDecimal value) {
            addCriterion("ORD_INDEX =", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexNotEqualTo(BigDecimal value) {
            addCriterion("ORD_INDEX <>", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexGreaterThan(BigDecimal value) {
            addCriterion("ORD_INDEX >", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ORD_INDEX >=", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexLessThan(BigDecimal value) {
            addCriterion("ORD_INDEX <", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ORD_INDEX <=", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexIn(List values) {
            addCriterion("ORD_INDEX in", values, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexNotIn(List values) {
            addCriterion("ORD_INDEX not in", values, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ORD_INDEX between", value1, value2, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ORD_INDEX not between", value1, value2, "ordIndex");
            return this;
        }

        public Criteria andIsGotoEditIsNull() {
            addCriterion("IS_GOTO_EDIT is null");
            return this;
        }

        public Criteria andIsGotoEditIsNotNull() {
            addCriterion("IS_GOTO_EDIT is not null");
            return this;
        }

        public Criteria andIsGotoEditEqualTo(String value) {
            addCriterion("IS_GOTO_EDIT =", value, "isGotoEdit");
            return this;
        }

        public Criteria andIsGotoEditNotEqualTo(String value) {
            addCriterion("IS_GOTO_EDIT <>", value, "isGotoEdit");
            return this;
        }

        public Criteria andIsGotoEditGreaterThan(String value) {
            addCriterion("IS_GOTO_EDIT >", value, "isGotoEdit");
            return this;
        }

        public Criteria andIsGotoEditGreaterThanOrEqualTo(String value) {
            addCriterion("IS_GOTO_EDIT >=", value, "isGotoEdit");
            return this;
        }

        public Criteria andIsGotoEditLessThan(String value) {
            addCriterion("IS_GOTO_EDIT <", value, "isGotoEdit");
            return this;
        }

        public Criteria andIsGotoEditLessThanOrEqualTo(String value) {
            addCriterion("IS_GOTO_EDIT <=", value, "isGotoEdit");
            return this;
        }

        public Criteria andIsGotoEditLike(String value) {
            addCriterion("IS_GOTO_EDIT like", value, "isGotoEdit");
            return this;
        }

        public Criteria andIsGotoEditNotLike(String value) {
            addCriterion("IS_GOTO_EDIT not like", value, "isGotoEdit");
            return this;
        }

        public Criteria andIsGotoEditIn(List values) {
            addCriterion("IS_GOTO_EDIT in", values, "isGotoEdit");
            return this;
        }

        public Criteria andIsGotoEditNotIn(List values) {
            addCriterion("IS_GOTO_EDIT not in", values, "isGotoEdit");
            return this;
        }

        public Criteria andIsGotoEditBetween(String value1, String value2) {
            addCriterion("IS_GOTO_EDIT between", value1, value2, "isGotoEdit");
            return this;
        }

        public Criteria andIsGotoEditNotBetween(String value1, String value2) {
            addCriterion("IS_GOTO_EDIT not between", value1, value2, "isGotoEdit");
            return this;
        }

        public Criteria andIsInMenuIsNull() {
            addCriterion("IS_IN_MENU is null");
            return this;
        }

        public Criteria andIsInMenuIsNotNull() {
            addCriterion("IS_IN_MENU is not null");
            return this;
        }

        public Criteria andIsInMenuEqualTo(String value) {
            addCriterion("IS_IN_MENU =", value, "isInMenu");
            return this;
        }

        public Criteria andIsInMenuNotEqualTo(String value) {
            addCriterion("IS_IN_MENU <>", value, "isInMenu");
            return this;
        }

        public Criteria andIsInMenuGreaterThan(String value) {
            addCriterion("IS_IN_MENU >", value, "isInMenu");
            return this;
        }

        public Criteria andIsInMenuGreaterThanOrEqualTo(String value) {
            addCriterion("IS_IN_MENU >=", value, "isInMenu");
            return this;
        }

        public Criteria andIsInMenuLessThan(String value) {
            addCriterion("IS_IN_MENU <", value, "isInMenu");
            return this;
        }

        public Criteria andIsInMenuLessThanOrEqualTo(String value) {
            addCriterion("IS_IN_MENU <=", value, "isInMenu");
            return this;
        }

        public Criteria andIsInMenuLike(String value) {
            addCriterion("IS_IN_MENU like", value, "isInMenu");
            return this;
        }

        public Criteria andIsInMenuNotLike(String value) {
            addCriterion("IS_IN_MENU not like", value, "isInMenu");
            return this;
        }

        public Criteria andIsInMenuIn(List values) {
            addCriterion("IS_IN_MENU in", values, "isInMenu");
            return this;
        }

        public Criteria andIsInMenuNotIn(List values) {
            addCriterion("IS_IN_MENU not in", values, "isInMenu");
            return this;
        }

        public Criteria andIsInMenuBetween(String value1, String value2) {
            addCriterion("IS_IN_MENU between", value1, value2, "isInMenu");
            return this;
        }

        public Criteria andIsInMenuNotBetween(String value1, String value2) {
            addCriterion("IS_IN_MENU not between", value1, value2, "isInMenu");
            return this;
        }

        public Criteria andIsAlwaysNewIsNull() {
            addCriterion("IS_ALWAYS_NEW is null");
            return this;
        }

        public Criteria andIsAlwaysNewIsNotNull() {
            addCriterion("IS_ALWAYS_NEW is not null");
            return this;
        }

        public Criteria andIsAlwaysNewEqualTo(String value) {
            addCriterion("IS_ALWAYS_NEW =", value, "isAlwaysNew");
            return this;
        }

        public Criteria andIsAlwaysNewNotEqualTo(String value) {
            addCriterion("IS_ALWAYS_NEW <>", value, "isAlwaysNew");
            return this;
        }

        public Criteria andIsAlwaysNewGreaterThan(String value) {
            addCriterion("IS_ALWAYS_NEW >", value, "isAlwaysNew");
            return this;
        }

        public Criteria andIsAlwaysNewGreaterThanOrEqualTo(String value) {
            addCriterion("IS_ALWAYS_NEW >=", value, "isAlwaysNew");
            return this;
        }

        public Criteria andIsAlwaysNewLessThan(String value) {
            addCriterion("IS_ALWAYS_NEW <", value, "isAlwaysNew");
            return this;
        }

        public Criteria andIsAlwaysNewLessThanOrEqualTo(String value) {
            addCriterion("IS_ALWAYS_NEW <=", value, "isAlwaysNew");
            return this;
        }

        public Criteria andIsAlwaysNewLike(String value) {
            addCriterion("IS_ALWAYS_NEW like", value, "isAlwaysNew");
            return this;
        }

        public Criteria andIsAlwaysNewNotLike(String value) {
            addCriterion("IS_ALWAYS_NEW not like", value, "isAlwaysNew");
            return this;
        }

        public Criteria andIsAlwaysNewIn(List values) {
            addCriterion("IS_ALWAYS_NEW in", values, "isAlwaysNew");
            return this;
        }

        public Criteria andIsAlwaysNewNotIn(List values) {
            addCriterion("IS_ALWAYS_NEW not in", values, "isAlwaysNew");
            return this;
        }

        public Criteria andIsAlwaysNewBetween(String value1, String value2) {
            addCriterion("IS_ALWAYS_NEW between", value1, value2, "isAlwaysNew");
            return this;
        }

        public Criteria andIsAlwaysNewNotBetween(String value1, String value2) {
            addCriterion("IS_ALWAYS_NEW not between", value1, value2, "isAlwaysNew");
            return this;
        }

        public Criteria andUrlIsNull() {
            addCriterion("URL is null");
            return this;
        }

        public Criteria andUrlIsNotNull() {
            addCriterion("URL is not null");
            return this;
        }

        public Criteria andUrlEqualTo(String value) {
            addCriterion("URL =", value, "url");
            return this;
        }

        public Criteria andUrlNotEqualTo(String value) {
            addCriterion("URL <>", value, "url");
            return this;
        }

        public Criteria andUrlGreaterThan(String value) {
            addCriterion("URL >", value, "url");
            return this;
        }

        public Criteria andUrlGreaterThanOrEqualTo(String value) {
            addCriterion("URL >=", value, "url");
            return this;
        }

        public Criteria andUrlLessThan(String value) {
            addCriterion("URL <", value, "url");
            return this;
        }

        public Criteria andUrlLessThanOrEqualTo(String value) {
            addCriterion("URL <=", value, "url");
            return this;
        }

        public Criteria andUrlLike(String value) {
            addCriterion("URL like", value, "url");
            return this;
        }

        public Criteria andUrlNotLike(String value) {
            addCriterion("URL not like", value, "url");
            return this;
        }

        public Criteria andUrlIn(List values) {
            addCriterion("URL in", values, "url");
            return this;
        }

        public Criteria andUrlNotIn(List values) {
            addCriterion("URL not in", values, "url");
            return this;
        }

        public Criteria andUrlBetween(String value1, String value2) {
            addCriterion("URL between", value1, value2, "url");
            return this;
        }

        public Criteria andUrlNotBetween(String value1, String value2) {
            addCriterion("URL not between", value1, value2, "url");
            return this;
        }
    }
}