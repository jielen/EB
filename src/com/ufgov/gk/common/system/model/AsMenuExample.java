package com.ufgov.gk.common.system.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AsMenuExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public AsMenuExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    protected AsMenuExample(AsMenuExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table AS_MENU
     *
     * @abatorgenerated Sat Jun 23 09:24:11 CST 2012
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andMenuIdIsNull() {
            addCriterion("MENU_ID is null");
            return this;
        }

        public Criteria andMenuIdIsNotNull() {
            addCriterion("MENU_ID is not null");
            return this;
        }

        public Criteria andMenuIdEqualTo(String value) {
            addCriterion("MENU_ID =", value, "menuId");
            return this;
        }

        public Criteria andMenuIdNotEqualTo(String value) {
            addCriterion("MENU_ID <>", value, "menuId");
            return this;
        }

        public Criteria andMenuIdGreaterThan(String value) {
            addCriterion("MENU_ID >", value, "menuId");
            return this;
        }

        public Criteria andMenuIdGreaterThanOrEqualTo(String value) {
            addCriterion("MENU_ID >=", value, "menuId");
            return this;
        }

        public Criteria andMenuIdLessThan(String value) {
            addCriterion("MENU_ID <", value, "menuId");
            return this;
        }

        public Criteria andMenuIdLessThanOrEqualTo(String value) {
            addCriterion("MENU_ID <=", value, "menuId");
            return this;
        }

        public Criteria andMenuIdLike(String value) {
            addCriterion("MENU_ID like", value, "menuId");
            return this;
        }

        public Criteria andMenuIdNotLike(String value) {
            addCriterion("MENU_ID not like", value, "menuId");
            return this;
        }

        public Criteria andMenuIdIn(List values) {
            addCriterion("MENU_ID in", values, "menuId");
            return this;
        }

        public Criteria andMenuIdNotIn(List values) {
            addCriterion("MENU_ID not in", values, "menuId");
            return this;
        }

        public Criteria andMenuIdBetween(String value1, String value2) {
            addCriterion("MENU_ID between", value1, value2, "menuId");
            return this;
        }

        public Criteria andMenuIdNotBetween(String value1, String value2) {
            addCriterion("MENU_ID not between", value1, value2, "menuId");
            return this;
        }

        public Criteria andMenuNameIsNull() {
            addCriterion("MENU_NAME is null");
            return this;
        }

        public Criteria andMenuNameIsNotNull() {
            addCriterion("MENU_NAME is not null");
            return this;
        }

        public Criteria andMenuNameEqualTo(String value) {
            addCriterion("MENU_NAME =", value, "menuName");
            return this;
        }

        public Criteria andMenuNameNotEqualTo(String value) {
            addCriterion("MENU_NAME <>", value, "menuName");
            return this;
        }

        public Criteria andMenuNameGreaterThan(String value) {
            addCriterion("MENU_NAME >", value, "menuName");
            return this;
        }

        public Criteria andMenuNameGreaterThanOrEqualTo(String value) {
            addCriterion("MENU_NAME >=", value, "menuName");
            return this;
        }

        public Criteria andMenuNameLessThan(String value) {
            addCriterion("MENU_NAME <", value, "menuName");
            return this;
        }

        public Criteria andMenuNameLessThanOrEqualTo(String value) {
            addCriterion("MENU_NAME <=", value, "menuName");
            return this;
        }

        public Criteria andMenuNameLike(String value) {
            addCriterion("MENU_NAME like", value, "menuName");
            return this;
        }

        public Criteria andMenuNameNotLike(String value) {
            addCriterion("MENU_NAME not like", value, "menuName");
            return this;
        }

        public Criteria andMenuNameIn(List values) {
            addCriterion("MENU_NAME in", values, "menuName");
            return this;
        }

        public Criteria andMenuNameNotIn(List values) {
            addCriterion("MENU_NAME not in", values, "menuName");
            return this;
        }

        public Criteria andMenuNameBetween(String value1, String value2) {
            addCriterion("MENU_NAME between", value1, value2, "menuName");
            return this;
        }

        public Criteria andMenuNameNotBetween(String value1, String value2) {
            addCriterion("MENU_NAME not between", value1, value2, "menuName");
            return this;
        }

        public Criteria andOrdIndexIsNull() {
            addCriterion("ORD_INDEX is null");
            return this;
        }

        public Criteria andOrdIndexIsNotNull() {
            addCriterion("ORD_INDEX is not null");
            return this;
        }

        public Criteria andOrdIndexEqualTo(BigDecimal value) {
            addCriterion("ORD_INDEX =", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexNotEqualTo(BigDecimal value) {
            addCriterion("ORD_INDEX <>", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexGreaterThan(BigDecimal value) {
            addCriterion("ORD_INDEX >", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ORD_INDEX >=", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexLessThan(BigDecimal value) {
            addCriterion("ORD_INDEX <", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ORD_INDEX <=", value, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexIn(List values) {
            addCriterion("ORD_INDEX in", values, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexNotIn(List values) {
            addCriterion("ORD_INDEX not in", values, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ORD_INDEX between", value1, value2, "ordIndex");
            return this;
        }

        public Criteria andOrdIndexNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ORD_INDEX not between", value1, value2, "ordIndex");
            return this;
        }

        public Criteria andParentIdIsNull() {
            addCriterion("PARENT_ID is null");
            return this;
        }

        public Criteria andParentIdIsNotNull() {
            addCriterion("PARENT_ID is not null");
            return this;
        }

        public Criteria andParentIdEqualTo(String value) {
            addCriterion("PARENT_ID =", value, "parentId");
            return this;
        }

        public Criteria andParentIdNotEqualTo(String value) {
            addCriterion("PARENT_ID <>", value, "parentId");
            return this;
        }

        public Criteria andParentIdGreaterThan(String value) {
            addCriterion("PARENT_ID >", value, "parentId");
            return this;
        }

        public Criteria andParentIdGreaterThanOrEqualTo(String value) {
            addCriterion("PARENT_ID >=", value, "parentId");
            return this;
        }

        public Criteria andParentIdLessThan(String value) {
            addCriterion("PARENT_ID <", value, "parentId");
            return this;
        }

        public Criteria andParentIdLessThanOrEqualTo(String value) {
            addCriterion("PARENT_ID <=", value, "parentId");
            return this;
        }

        public Criteria andParentIdLike(String value) {
            addCriterion("PARENT_ID like", value, "parentId");
            return this;
        }

        public Criteria andParentIdNotLike(String value) {
            addCriterion("PARENT_ID not like", value, "parentId");
            return this;
        }

        public Criteria andParentIdIn(List values) {
            addCriterion("PARENT_ID in", values, "parentId");
            return this;
        }

        public Criteria andParentIdNotIn(List values) {
            addCriterion("PARENT_ID not in", values, "parentId");
            return this;
        }

        public Criteria andParentIdBetween(String value1, String value2) {
            addCriterion("PARENT_ID between", value1, value2, "parentId");
            return this;
        }

        public Criteria andParentIdNotBetween(String value1, String value2) {
            addCriterion("PARENT_ID not between", value1, value2, "parentId");
            return this;
        }

        public Criteria andIconNameIsNull() {
            addCriterion("ICON_NAME is null");
            return this;
        }

        public Criteria andIconNameIsNotNull() {
            addCriterion("ICON_NAME is not null");
            return this;
        }

        public Criteria andIconNameEqualTo(String value) {
            addCriterion("ICON_NAME =", value, "iconName");
            return this;
        }

        public Criteria andIconNameNotEqualTo(String value) {
            addCriterion("ICON_NAME <>", value, "iconName");
            return this;
        }

        public Criteria andIconNameGreaterThan(String value) {
            addCriterion("ICON_NAME >", value, "iconName");
            return this;
        }

        public Criteria andIconNameGreaterThanOrEqualTo(String value) {
            addCriterion("ICON_NAME >=", value, "iconName");
            return this;
        }

        public Criteria andIconNameLessThan(String value) {
            addCriterion("ICON_NAME <", value, "iconName");
            return this;
        }

        public Criteria andIconNameLessThanOrEqualTo(String value) {
            addCriterion("ICON_NAME <=", value, "iconName");
            return this;
        }

        public Criteria andIconNameLike(String value) {
            addCriterion("ICON_NAME like", value, "iconName");
            return this;
        }

        public Criteria andIconNameNotLike(String value) {
            addCriterion("ICON_NAME not like", value, "iconName");
            return this;
        }

        public Criteria andIconNameIn(List values) {
            addCriterion("ICON_NAME in", values, "iconName");
            return this;
        }

        public Criteria andIconNameNotIn(List values) {
            addCriterion("ICON_NAME not in", values, "iconName");
            return this;
        }

        public Criteria andIconNameBetween(String value1, String value2) {
            addCriterion("ICON_NAME between", value1, value2, "iconName");
            return this;
        }

        public Criteria andIconNameNotBetween(String value1, String value2) {
            addCriterion("ICON_NAME not between", value1, value2, "iconName");
            return this;
        }
    }
}