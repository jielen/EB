package com.ufgov.gk.server.ebay.dao;

import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.ufgov.gk.common.ebay.model.EbCandidateItem;
import com.ufgov.gk.common.ebay.model.EbCandidateItemExample;

public class EbCandidateItemDAOImpl extends SqlMapClientDaoSupport implements EbCandidateItemDAO {

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  public EbCandidateItemDAOImpl() {
    super();
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  public void insert(EbCandidateItem record) {
    getSqlMapClientTemplate().insert("EB_CANDIDATE_ITEM.insert", record);
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  public int updateByPrimaryKey(EbCandidateItem record) {
    int rows = getSqlMapClientTemplate().update("EB_CANDIDATE_ITEM.updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  public int updateByPrimaryKeySelective(EbCandidateItem record) {
    int rows = getSqlMapClientTemplate().update("EB_CANDIDATE_ITEM.updateByPrimaryKeySelective", record);
    return rows;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  public List selectByExample(EbCandidateItemExample example) {
    List list = getSqlMapClientTemplate().queryForList("EB_CANDIDATE_ITEM.selectByExample", example);
    return list;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  public EbCandidateItem selectByPrimaryKey(String candidateId) {
    EbCandidateItem key = new EbCandidateItem();
    key.setCandidateId(candidateId);
    EbCandidateItem record = (EbCandidateItem) getSqlMapClientTemplate().queryForObject("EB_CANDIDATE_ITEM.selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  public int deleteByExample(EbCandidateItemExample example) {
    int rows = getSqlMapClientTemplate().delete("EB_CANDIDATE_ITEM.deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  public int deleteByPrimaryKey(String candidateId) {
    EbCandidateItem key = new EbCandidateItem();
    key.setCandidateId(candidateId);
    int rows = getSqlMapClientTemplate().delete("EB_CANDIDATE_ITEM.deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  public int countByExample(EbCandidateItemExample example) {
    Integer count = (Integer) getSqlMapClientTemplate().queryForObject("EB_CANDIDATE_ITEM.countByExample", example);
    return count.intValue();
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  public int updateByExampleSelective(EbCandidateItem record, EbCandidateItemExample example) {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = getSqlMapClientTemplate().update("EB_CANDIDATE_ITEM.updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  public int updateByExample(EbCandidateItem record, EbCandidateItemExample example) {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = getSqlMapClientTemplate().update("EB_CANDIDATE_ITEM.updateByExample", parms);
    return rows;
  }

  /**
   * This class was generated by Abator for iBATIS.
   * This class corresponds to the database table EB_CANDIDATE_ITEM
   *
   * @abatorgenerated Wed Jul 11 23:15:51 CST 2012
   */
  private static class UpdateByExampleParms extends EbCandidateItemExample {
    private Object record;

    public UpdateByExampleParms(Object record, EbCandidateItemExample example) {
      super(example);
      this.record = record;
    }

    public Object getRecord() {
      return record;
    }
  }

  @Override
  public EbCandidateItem getEbCandidateItemByRefItemId(String itemId) {
    //解决一个item存在于多个candidateitem中的情况
    List<EbCandidateItem> candidateItemLst = getSqlMapClientTemplate().queryForList("EB_CANDIDATE_ITEM.selectByRefItemId", itemId);
    if (candidateItemLst != null && candidateItemLst.size() == 1) {
      return candidateItemLst.get(0);
    }
    if (candidateItemLst == null) {
      return null;
    }
    EbCandidateItem item = null;

    if (candidateItemLst.size() > 0) {
      for (EbCandidateItem ebCandidateItem : candidateItemLst) {
        if (ebCandidateItem.getCandidateId().equals(itemId)) {
          return ebCandidateItem;
        }
        if (item == null) {
          item = ebCandidateItem;
          continue;
        }
        if (item.getEbSoldQuality().longValue() < ebCandidateItem.getEbSoldQuality().longValue()) {
          item = ebCandidateItem;
        }
      }
    }
    return item;
    // TODO Auto-generated method stub
    //    EbCandidateItem record = (EbCandidateItem) getSqlMapClientTemplate().queryForObject("EB_CANDIDATE_ITEM.selectByRefItemId", itemId);
    //    return record;
  }

  @Override
  public void deleteBySeller(String sellerId) {
    // TODO Auto-generated method stub
    getSqlMapClientTemplate().delete("EB_CANDIDATE_ITEM.deleteBySeller", sellerId);
  }
}