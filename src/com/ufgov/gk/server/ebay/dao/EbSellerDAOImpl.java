package com.ufgov.gk.server.ebay.dao;

import com.ufgov.gk.common.ebay.model.EbSeller;
import com.ufgov.gk.common.ebay.model.EbSellerExample;

import java.util.HashMap;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class EbSellerDAOImpl extends SqlMapClientDaoSupport implements EbSellerDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    public EbSellerDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    public void insert(EbSeller record) {
        getSqlMapClientTemplate().insert("EB_SELLER.insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    public int updateByPrimaryKey(EbSeller record) {
        int rows = getSqlMapClientTemplate().update("EB_SELLER.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    public int updateByPrimaryKeySelective(EbSeller record) {
        int rows = getSqlMapClientTemplate().update("EB_SELLER.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    public List selectByExample(EbSellerExample example) {
        List list = getSqlMapClientTemplate().queryForList("EB_SELLER.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    public EbSeller selectByPrimaryKey(String sellerId) {
        EbSeller key = new EbSeller();
        key.setSellerId(sellerId);
        EbSeller record = (EbSeller) getSqlMapClientTemplate().queryForObject("EB_SELLER.selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    public int deleteByExample(EbSellerExample example) {
        int rows = getSqlMapClientTemplate().delete("EB_SELLER.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    public int deleteByPrimaryKey(String sellerId) {
        EbSeller key = new EbSeller();
        key.setSellerId(sellerId);
        int rows = getSqlMapClientTemplate().delete("EB_SELLER.deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    public int countByExample(EbSellerExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("EB_SELLER.countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    public int updateByExampleSelective(EbSeller record, EbSellerExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("EB_SELLER.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    public int updateByExample(EbSeller record, EbSellerExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("EB_SELLER.updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table EB_SELLER
     *
     * @abatorgenerated Sat Jun 23 08:51:07 CST 2012
     */
    private static class UpdateByExampleParms extends EbSellerExample {
        private Object record;

        public UpdateByExampleParms(Object record, EbSellerExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

	@Override
	public boolean changeSellerIdFN(String sellerId, String newSellerId) {
		// TODO Auto-generated method stub
		HashMap params=new HashMap();
		params.put("sellerId", sellerId);
		params.put("newSellerId", newSellerId);
		getSqlMapClientTemplate().update("EB_SELLER.updateSellerIdSiteStore", params);
		getSqlMapClientTemplate().update("EB_SELLER.updateSellerIdCategory", params);
		getSqlMapClientTemplate().update("EB_SELLER.updateSellerIdTaskSite", params);
		getSqlMapClientTemplate().update("EB_SELLER.updateSellerIdTask", params);
		getSqlMapClientTemplate().update("EB_SELLER.updateSellerIdHistory", params);
		getSqlMapClientTemplate().update("EB_SELLER.updateSellerIdItemChecked", params);
		getSqlMapClientTemplate().update("EB_SELLER.updateSellerIdItem", params);
		getSqlMapClientTemplate().update("EB_SELLER.updateSellerIdItemRef", params);
		getSqlMapClientTemplate().update("EB_SELLER.updateSellerIdSeller", params);
		return true;
	}
}