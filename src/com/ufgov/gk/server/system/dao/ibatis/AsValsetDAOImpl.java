package com.ufgov.gk.server.system.dao.ibatis;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.ufgov.gk.common.system.model.AsVal;
import com.ufgov.gk.server.system.dao.AsValsetDAO;
import com.ufgov.zc.common.system.model.AsValset;
import com.ufgov.zc.common.system.model.AsValsetExample;

public class AsValsetDAOImpl extends SqlMapClientDaoSupport implements AsValsetDAO {

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  public AsValsetDAOImpl() {
    super();
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  public void insert(AsValset record) {
    getSqlMapClientTemplate().insert("AS_VALSET.abatorgenerated_insert", record);
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  public int updateByPrimaryKey(AsValset record) {
    int rows = getSqlMapClientTemplate().update("AS_VALSET.abatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  public int updateByPrimaryKeySelective(AsValset record) {
    int rows = getSqlMapClientTemplate().update("AS_VALSET.abatorgenerated_updateByPrimaryKeySelective", record);
    return rows;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  public List selectByExample(AsValsetExample example) {
    List list = getSqlMapClientTemplate().queryForList("AS_VALSET.abatorgenerated_selectByExample", example);
    return list;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  public AsValset selectByPrimaryKey(String valsetId) {
    AsValset key = new AsValset();
    key.setValsetId(valsetId);
    AsValset record = (AsValset) getSqlMapClientTemplate().queryForObject("AS_VALSET.abatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  public int deleteByExample(AsValsetExample example) {
    int rows = getSqlMapClientTemplate().delete("AS_VALSET.abatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  public int deleteByPrimaryKey(String valsetId) {
    AsValset key = new AsValset();
    key.setValsetId(valsetId);
    int rows = getSqlMapClientTemplate().delete("AS_VALSET.abatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  public int countByExample(AsValsetExample example) {
    Integer count = (Integer) getSqlMapClientTemplate().queryForObject("AS_VALSET.abatorgenerated_countByExample", example);
    return count.intValue();
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  public int updateByExampleSelective(AsValset record, AsValsetExample example) {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = getSqlMapClientTemplate().update("AS_VALSET.abatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Abator for iBATIS.
   * This method corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  public int updateByExample(AsValset record, AsValsetExample example) {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = getSqlMapClientTemplate().update("AS_VALSET.abatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This class was generated by Abator for iBATIS.
   * This class corresponds to the database table AS_VALSET
   *
   * @abatorgenerated Tue Jun 26 18:19:50 CST 2012
   */
  private static class UpdateByExampleParms extends AsValsetExample {
    private Object record;

    public UpdateByExampleParms(Object record, AsValsetExample example) {
      super(example);
      this.record = record;
    }

    public Object getRecord() {
      return record;
    }
  }

  @Override
  public List getAsValByValSql(String valSetId, String valSql) {
    // TODO Auto-generated method stub
    List rtn = new ArrayList();
    AsVal val = null;
    Connection con = null;
    Statement st = null;
    ResultSet rs = null;
    try {
      con = this.getSqlMapClientTemplate().getDataSource().getConnection();
      st = con.createStatement();
      rs = st.executeQuery(valSql.toUpperCase());
      while (rs.next()) {
        val = new AsVal();
        val.setValSetId(valSetId);
        val.setValId(rs.getString("CODE"));
        val.setVal(rs.getString("NAME"));
        rtn.add(val);
      }
    } catch (SQLException e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    } finally {
      try {
        if (rs != null) {
          rs.close();
        }
        if (st != null) {
          st.close();
        }
        if (con != null)
          con.close();
      } catch (SQLException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
      }
    }
    return rtn;
  }

}